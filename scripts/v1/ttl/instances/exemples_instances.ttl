@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sosa: <http://www.w3.org/ns/sosa/> .
@prefix time: <http://www.w3.org/2006/time#> .
@prefix thing: <https://schema.org/> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix dp: <uri/deepimpact> .

# Les sosa:Observation (qui seront séparées en différents fichiers turtle 
# selon le type de données, à partir des tableaux de données parsés par 
# le script Python)

# A voir : changer sosa:hasSimpleResult en sosa:hasResult vers une entité 
# sosa:Result qui inclut la valeur et l'unité (au lieu de faire un triplet 
# variable - om:hasUnit - om:<uri de l'unité> dans dp.variables.ttl)

# A faire : j'ai pas encore check comment encoder correctement les objets 
# des triplets sosa:observation - sosa:madeBySensor - sosa:Sensor (faudrait 
# faire des foaf:Agent et des rdf:Bag de foaf:Agent par ex)



# Exemple de donnée de biomasse

dpinst:OBS0000001 a sosa:Observation ;
	sosa:hasFeatureOfInterest dpinst:AF001-Bn-Y1-PA ;
	sosa:hasUltimateFeatureOfInterest dpinst:AF001-Bn-Y1 ;
	sosa:ObservedProperty dp:BiomassCrop ;
	sosa:hasSimpleResult 1270^^xsd:int ;
	sosa:phenomenonTime dp:Y1 ;
	sosa:resultTime "20/05/2022"xsd:DateTime ;
	sosa:madeBySensor "PLG,CM,LL"^^xsd:string .



# Exemple de donnée de rendements des cultures

dpinst:OBS0000002 a sosa:Observation ;
	sosa:hasFeatureOfInterest dpinst:AF001-Bn-Y1-P1 ;
	sosa:hasUltimateFeatureOfInterest dpinst:AF001-Bn-Y1 ;
	sosa:ObservedProperty dp:DryWeight1000Seeds ;
	sosa:hasSimpleResult 3.54^^xsd:float ;
	sosa:phenomenonTime dp:Y1 ;
	sosa:resultTime "08/07/2022"xsd:DateTime ;
	sosa:madeBySensor "LL,CM"^^xsd:string .



# Exemple de donnée d'analyse des graines

dpinst:OBS0000003 a sosa:Observation ;
	sosa:hasFeatureOfInterest dpinst:AF001-Bn-Y1-PA ;
	sosa:hasUltimateFeatureOfInterest dpinst:AF001-Bn-Y1 ;
	sosa:ObservedProperty dp:NirsMoisture ;
	sosa:hasSimpleResult 5.2818^^xsd:float ;
	sosa:phenomenonTime dp:Y1 ;
	sosa:resultTime "20/07/2023"xsd:DateTime ;
	sosa:madeBySensor "KGN"^^xsd:string .



# Exemple donnée de physico-chimie des sols (j'ai ni la date ni le sensor 
# pour ça, ils ont fait faire les analyses par une entreprise je crois ...)

dpinst:OBS0000003 a sosa:Observation ;
	sosa:hasFeatureOfInterest dpinst:AF001-Bn-Y1 ;
	sosa:ObservedProperty dp:CoarseSand ;
	sosa:hasSimpleResult 171^^xsd:int ;
	sosa:phenomenonTime dp:Y1S1 .



# Pas mis d'exemple d'ASV, Weeds, ou biagresseurs car c'est à finaliser

# ASV : une observation d'abondance est liée :
# - au taxon observé
# - à l'échantillon, qui matche le champ + le compartiment de plante séquencé 
#   (ex champ AF001 + Racines)
# Devrait matcher sosa si on considère les ASV comme des ObservableProperty

# Weeds : inventaire des espèces d'adventices sur un champ, et pour chaque espèce on a :
# - l'abondance
# - le stade phénologique
# -> ça fait plusieurs observations qui se télescopent, pas pénible pour sosa

# Bioagresseurs : absence/présence d'espèces sur un plot et rien d'autre -> ça devrait 
# matcher sosa si on considère les espèces comme des sosa:ObservableProperty